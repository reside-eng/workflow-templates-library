name: Verify Library

on:
  workflow_call:
    inputs:
      NODE_VERSION:
        default: '18.x'
        required: false
        type: string
      TIMEOUT:
        default: 15
        required: false
        type: number
      PACKAGE_MANAGER:
        default: yarn-berry
        required: false
        type: string
      ENABLE_TYPES_CHECK:
        default: false
        required: false
        type: boolean
      ENABLE_FORMAT_CHECK:
        default: false
        required: false
        type: boolean
      ENABLE_SIZE_LIMIT_CHECK:
        default: false
        required: false
        type: boolean
      ENABLE_VISUAL_TESTING:
        default: false
        required: false
        type: boolean
      ENABLE_PLAYWRIGHT:
        default: false
        required: false
        type: boolean
      IS_MONOREPO:
        default: false
        required: false
        type: boolean
      ENABLE_SLACK_NOTIFICATION:
        default: true
        required: false
        type: boolean
      SLACK_NOTIFICATION_SECRET:
        default: 'SLACK_WEBHOOK_PLATFORM_PROD'
        required: false
        type: string

    secrets:
      NPM_READ_TOKEN:
        required: true
      # Note: Due to some github actions limitations all the slack webhook secrets that could be used by the libraries need to be added here with required: false
      SLACK_WEBHOOK_CORE_NON_PROD:
        required: false
      SLACK_WEBHOOK_PLATFORM_PROD:
        required: false
      SLACK_WEBHOOK_PLATFORM_SERVICES_NONPROD:
        required: false
      SLACK_WEBHOOK_UI_WG:
        required: false
      # Secret needed when ENABLE_VISUAL_TESTING = true:
      # - CI_SERVICE_ACCOUNT
      # - PERCY_TOKEN
      CI_SERVICE_ACCOUNT:
        required: false
      PERCY_TOKEN:
        required: false

env:
  NODE_VERSION: ${{ inputs.NODE_VERSION }}

jobs:
  verify:
    name: verify
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.TIMEOUT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Configure Package Manager
        if: inputs.PACKAGE_MANAGER == 'yarn'
        run: |
          echo Configuring NPM_TOKEN globally for .npmrc
          yarn config set npmAuthToken ${{ secrets.NPM_READ_TOKEN }}
          npm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_READ_TOKEN }}
          npm whoami

      - name: Install dependencies with Yarn-Berry
        if: inputs.PACKAGE_MANAGER == 'yarn-berry'
        run: yarn install --immutable
      
      - name: Install dependencies with Yarn
        if: inputs.PACKAGE_MANAGER == 'yarn'
        run: yarn install --frozen-lockfile

      - name: Verify lint
        run: yarn lint

      - name: Check types
        if: inputs.ENABLE_TYPES_CHECK
        ## TODO: Ensure all libraries with types check enabled implement types command according to their needs
        run: yarn types:check

      - name: Check formatting
        if: inputs.ENABLE_FORMAT_CHECK
        ## TODO: Ensure all libraries with format check enabled implement format:check command according to their needs
        run: yarn format:check

      - name: Test
        ## TODO: Ensure all libraries implement test:cov command according to their needs
        run: yarn test:cov

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v1.2.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build app
        run: yarn build

      # TODO: Check with team if pantry is ready to switch to andresz1/size-limit-action
      #
      # TODO: [PLAT-2557] Skipped until size limit settings are in main (since it runs main size check for diff comment)
      # - name: Check build size
      #   if: inputs.ENABLE_SIZE_LIMIT_CHECK
      #   uses: andresz1/size-limit-action@v1.7.0
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     skip_step: install
      #     script: yarn size --json
      #
      # TODO: [PLAT-2557] Replace with andresz1/size-limit-action once size-limit settings are in main (needed for diff)
      - name: Size Check
        if: inputs.ENABLE_SIZE_LIMIT_CHECK
        run: yarn size:check

      - name: Build Storybook
        if: inputs.ENABLE_VISUAL_TESTING
        run: yarn storybook:build

      - name: Percy Visual Testing
        if: inputs.ENABLE_VISUAL_TESTING
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        run: yarn percy

      - name: Auth Cloud SDK
        if: inputs.ENABLE_VISUAL_TESTING || inputs.ENABLE_PLAYWRIGHT
        uses: google-github-actions/auth@v1
        with:
          project_id: 'reside-stage'
          credentials_json: '${{ secrets.CI_SERVICE_ACCOUNT }}'

      - name: Set up Cloud SDK
        if: inputs.ENABLE_VISUAL_TESTING || inputs.ENABLE_PLAYWRIGHT
        uses: google-github-actions/setup-gcloud@v1


      - name: Upload Storybook preview
        if: inputs.ENABLE_VISUAL_TESTING
        env:
          PR_NUM: ${{ github.event.pull_request.number }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          ls $GITHUB_WORKSPACE/docs-dist || echo "docs-dist is currently empty"
          bucket=side-plat-tools-public
          folderPath=storybook-previews/$REPO_NAME/$PR_NUM
          echo "Uploading storybook preview to Cloud Storage path \"$bucket/$folderPath\""
          gsutil -m cp -r $GITHUB_WORKSPACE/docs-dist/** gs://$bucket/$folderPath
          echo ""
          echo "Successfully uploaded storybook preview to Cloud Storage"
          echo "STORYBOOK_PREVIEW_URL=https://tools.stage-preview-lb.sideinc.dev/$folderPath/index.html" >> $GITHUB_ENV


      - name: Playwright
        if: inputs.ENABLE_VISUAL_TESTING
        uses: reside-eng/workflow-templates-library/.github/actions/playwright@playwright
  
      # - name: Upload Playwright preview
      #   if: inputs.ENABLE_PLAYWRIGHT
      #   env:
      #     PR_NUM: ${{ github.event.pull_request.number }}
      #     REPO_NAME: ${{ github.event.repository.name }}
      #   run: |
      #     ls $GITHUB_WORKSPACE/playwright-report || echo "playwright-report is currently empty"
      #     bucket=side-plat-tools-public
      #     folderPath=playwright-previews/$REPO_NAME/$PR_NUM
      #     echo "Uploading playwright preview to Cloud Storage path \"$bucket/$folderPath\""
      #     gsutil -m cp $GITHUB_WORKSPACE/playwright-report/** gs://$bucket/$folderPath
      #     echo ""
      #     echo "Successfully uploaded playwright preview to Cloud Storage"
      #     previewUrl=https://tools.stage-preview-lb.sideinc.dev/$folderPath/index.html
      #     echo "PLAYWRIGHT_PREVIEW_URL=$previewUrl" >> $GITHUB_ENV

      #     echo "PLAYWRIGHT_PREVIEW_COLUMN_HEADER=<th colspan=\"2\">Playwright Preview Link</th>" >> $GITHUB_ENV
      #     echo "PLAYWRIGHT_PREVIEW_COLUMN=<td><a href=\"$previewUrl\">ðŸ”— Playwright Preview</a></td>" >> $GITHUB_ENV

      - name: Find preview comment
        if: inputs.ENABLE_VISUAL_TESTING
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Preview Links

      - name: Comment preview links
        if: inputs.ENABLE_VISUAL_TESTING || inputs.ENABLE_PLAYWRIGHT
        uses: peter-evans/create-or-update-comment@v2.1.1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <table>
              <!-- Preview Links Comment Anchor -->
              <tr>
                <th colspan="2">Storybook Preview Link</th>
                $PLAYWRIGHT_PREVIEW_COLUMN_HEADER
              </tr>
              <tr>
                <td>
                  <a
                    href="${{ env.STORYBOOK_PREVIEW_URL }}"
                    >ðŸ”— Storybook Preview</a
                  >
                </td>
                $PLAYWRIGHT_PREVIEW_COLUMN
              </tr>
            </table>
          edit-mode: replace

  notification:
    if: always() && inputs.ENABLE_SLACK_NOTIFICATION
    name: notification
    needs: [verify]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.5.0

      - uses: technote-space/workflow-conclusion-action@v3.0.3

      - uses: reside-eng/workflow-status-notification-action@v1.2.2
        with:
          current-status: ${{ env.WORKFLOW_CONCLUSION }}
          slack-webhook: ${{ secrets[ inputs.SLACK_NOTIFICATION_SECRET ] }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
