name: Release Library

on:
  workflow_call:
    inputs:
      NODE_VERSION:
        default: '18.x'
        required: false
        type: string
      TIMEOUT:
        default: 15
        required: false
        type: number
      ENABLE_BUILDING:
        default: true
        required: false
        type: boolean
      ENABLE_TESTING:
        default: true
        required: false
        type: boolean
      ENABLE_COVERAGE:
        default: true
        required: false
        type: boolean
      ENABLE_VISUAL_TESTING:
        default: false
        required: false
        type: boolean
      IS_MONOREPO:
        default: false
        required: false
        type: boolean
      ENABLE_SLACK_NOTIFICATION:
        default: true
        required: false
        type: boolean
      SLACK_NOTIFICATION_SECRET:
        default: 'SLACK_WEBHOOK_PLATFORM_NONPROD'
        required: false
        type: string

    secrets:
      NPM_PUBLISH_TOKEN:
        required: true
      NPM_READ_TOKEN:
        required: true
      LIBRARY_CI_SERVICE_ACCOUNT:
        required: true
      #Secret needed when ENABLE_VISUAL_TESTING = true:
      # - SIDE_CI_APPLICATION_ID
      # - SIDE_CI_APPLICATION_PRIVATE_KEY
      # - PERCY_TOKEN
      SIDE_CI_APPLICATION_ID:
        required: false
      SIDE_CI_APPLICATION_PRIVATE_KEY:
        required: false
      PERCY_TOKEN:
        required: false

env:
  NODE_VERSION: ${{ inputs.NODE_VERSION }}
  LERNA_DEFAULT_ARGS: --exact --concurrency 1 --yes --conventional-commits --create-release github --allow-branch '*'

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.TIMEOUT }}
    env:
      SERVICE_NAME: ${{ github.event.repository.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Configure NPM auth token
        run: |
          yarn config set npmAuthToken ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Configure Package Manager
        run: |
          echo Configuring NPM_TOKEN globally for .npmrc
          npm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_PUBLISH_TOKEN }}
          npm whoami

      - name: Install dependencies with Yarn-Berry
        run: |
          yarn install --immutable

      - name: Test
        if: inputs.ENABLE_TESTING && inputs.ENABLE_COVERAGE == false
        run: yarn test

      - name: Test
        if: inputs.ENABLE_TESTING && inputs.ENABLE_COVERAGE
        run: yarn test:cov

      - name: Authenticate with Google Cloud
        if: inputs.ENABLE_TESTING && inputs.ENABLE_COVERAGE
        uses: google-github-actions/auth@v2
        with:
          project_id: reside-stage
          credentials_json: ${{ secrets.LIBRARY_CI_SERVICE_ACCOUNT }}

      # setup-gcloud without components is required to have the proper authentication for gsutil commands
      - name: Set up Google Cloud CLI
        if: inputs.ENABLE_TESTING && inputs.ENABLE_COVERAGE
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: ''

      - name: Upload coverage summary
        if: inputs.ENABLE_TESTING && inputs.ENABLE_COVERAGE
        run: |
          coverage_summary="./coverage/coverage-summary.json"

          if [ ! -f "$coverage_summary" ]; then
              npx nyc report --reporter=json-summary -t coverage
          fi
          
          bucket=reside-stage-plat-tools
          summaryFolder=coverage-reporting/summary

          gsutil -m -q cp $coverage_summary gs://$bucket/$summaryFolder/$SERVICE_NAME/$(date +%Y-%m-%d_%H-%M-%S).json
          gsutil -m -q cp $coverage_summary gs://$bucket/$summaryFolder/$SERVICE_NAME/latest.json
          echo "Coverage summary file uploaded successfully"

      - name: Build app
        if: inputs.ENABLE_BUILDING
        run: yarn build

      - name: Build Storybook
        if: inputs.ENABLE_VISUAL_TESTING
        run: yarn storybook:build

      - name: Publish Storybook to GH Pages
        if: inputs.ENABLE_VISUAL_TESTING
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs-dist

      - name: Percy Visual Testing
        if: inputs.ENABLE_VISUAL_TESTING
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        run: yarn percy

      - name: Semantic Release
        if: inputs.IS_MONOREPO == false
        uses: cycjimmy/semantic-release-action@v4.1.1
        id: semantic
        with:
          # NOTE: ^19 is ESM and was causing a break
          semantic_version: ^18
          branches: |
            [
              '+([0-9])?(.{+([0-9]),x}).x',
              'main',
              'next',
              'next-major',
              {name: 'beta', prerelease: true},
              {name: 'alpha', prerelease: true}
            ]
          # Config override used disable features of @semantic-release/github causing rate limit
          # @semantic-release/exec is installed internally
          extends: |
            @side/semantic-config-base
          # Sticky version until issue resolved. ref: https://github.com/semantic-release/semantic-release/issues/2922
          extra_plugins: |
            conventional-changelog-conventionalcommits@6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Token
        if: inputs.IS_MONOREPO
        id: get-workflow-token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.SIDE_CI_APPLICATION_ID }}
          application_private_key: ${{ secrets.SIDE_CI_APPLICATION_PRIVATE_KEY }}
          permissions: 'administration:write, contents:write'

      - name: Configure Git to CI user
        if: inputs.IS_MONOREPO
        run: |
          # This is needed because Lerna will write to the CHANGELOG and push a commit to the repo
          git config --global user.email 23222038+reside-camacho@users.noreply.github.com
          git config --global user.name reside-camacho
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ steps.get-workflow-token.outputs.token }}

      - name: Cleanup .yarnrc.yml changes before publish
        run: |
          git restore .yarnrc.yml

      - name: Publish to @latest dist-tag
        if: github.ref == 'refs/heads/main' && inputs.IS_MONOREPO
        run: |
          echo lerna publish ${{ env.LERNA_DEFAULT_ARGS }} --conventional-graduate
          yarn lerna publish ${{ env.LERNA_DEFAULT_ARGS }} --conventional-graduate
        env:
          GH_TOKEN: ${{ steps.get-workflow-token.outputs.token }}

      - name: Publish to a prerelease dist-tag
        if: github.ref != 'refs/heads/main' && inputs.IS_MONOREPO
        run: |
          echo lerna publish ${{ env.LERNA_DEFAULT_ARGS }} --conventional-prerelease --dist-tag ${GITHUB_REF##*/} --preid ${GITHUB_REF##*/}
          yarn lerna publish ${{ env.LERNA_DEFAULT_ARGS }} --conventional-prerelease --dist-tag ${GITHUB_REF##*/} --preid ${GITHUB_REF##*/}
        env:
          GH_TOKEN: ${{ steps.get-workflow-token.outputs.token }}

  check-dependencies:
    name: check-dependencies
    uses: ./.github/workflows/check-nodejs-dependencies.yml
    # Note: check-dependencies is failing for pantry due to "TypeError: Invalid Version: undefined"
    # We temporarily disable check-dependencies for pantry repo until it has been fixed
    # https://residenetwork.atlassian.net/browse/PLAT-8883
    if: ${{ github.event.repository.name != 'pantry' }}
    with:
      WORKFLOW_NAME: check-dependencies
      GIT_REF: ''
      NODE_VERSION: ${{ inputs.NODE_VERSION }}
    secrets:
      NPM_READ_TOKEN: ${{ secrets.NPM_READ_TOKEN }}
      LIBRARY_CI_SERVICE_ACCOUNT: ${{ secrets.LIBRARY_CI_SERVICE_ACCOUNT }}

  notification:
    if: always() && inputs.ENABLE_SLACK_NOTIFICATION
    name: notification
    needs: [release]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - uses: technote-space/workflow-conclusion-action@v3.0.3

      - uses: reside-eng/workflow-status-notification-action@v1.4.0
        with:
          current-status: ${{ env.WORKFLOW_CONCLUSION }}
          slack-webhook: ${{ secrets[ inputs.SLACK_NOTIFICATION_SECRET ] }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
